export interface Item {
    sourceSheet: Category;
    name: string;
    image?: string;
    variation?: null;
    bodyTitle?: null | string;
    pattern?: null;
    patternTitle?: null;
    diy?: boolean;
    bodyCustomize?: boolean | null;
    patternCustomize?: boolean;
    kitCost?: number | null;
    kitType?: null;
    buy: number;
    sell?: number | null;
    size?: Size;
    surface?: boolean;
    exchangePrice?: number | null;
    exchangeCurrency?: ExchangeCurrency | null;
    source?: string[];
    sourceNotes?: string[] | null;
    seasonEvent?: null | string;
    seasonEventExclusive?: boolean | null;
    hhaBasePoints?: number | null;
    hhaCategory?: HhaCategory | null;
    interact?: boolean | InteractEnum | null;
    tag?: null | string;
    outdoor?: boolean;
    speakerType?: SpeakerType | null;
    lightingType?: LightingType | null;
    catalog?: Catalog | null;
    versionAdded?: Version;
    unlocked?: boolean;
    filename?: string;
    variantId?: VariantID | null;
    internalId?: number;
    uniqueEntryId?: string;
    seriesTranslations?: SeriesTranslations;
    translations: SeriesTranslations | null;
    colors?: Color[];
    concepts?: Concept[];
    set?: null | string;
    series?: null | string;
    recipe: Recipe | null;
    themesTranslations?: ThemesTranslations;
    villagerEquippable?: boolean | null;
    seasonalAvailability?: SeasonalAvailability;
    type?: string;
    variations?: VariationElement[];
    styles?: Style[];
    themes?: Theme[];
    closetImage?: string;
    storageImage?: null | string;
    seasonality?: SeasonalAvailability;
    mannequinSeason?: SeasonalAvailability | null;
    gender?: Gender;
    villagerGender?: Gender | null;
    sortOrder?: number;
    clothGroupId?: number;
    backColor?: null | string;
    bodyColor?: string;
    headColor?: string;
    footColor?: string;
    penColor1?: string;
    penColor2?: string;
    penColor3?: string;
    penColor4?: string;
    startDate?: null | string;
    endDate?: null | string;
    nhStartDate?: null | string;
    nhEndDate?: null | string;
    shStartDate?: null | string;
    shEndDate?: null | string;
    customize?: boolean;
    framedImage?: null | string;
    albumImage?: null | string;
    inventoryImage?: string;
    stackSize?: number;
    inventoryFilename?: string;
    storageFilename?: null | string;
    sizeCategory?: SizeCategory;
    primaryShape?: PrimaryShape;
    secondaryShape?: SecondaryShape | null;
    vfx?: boolean;
    doorDeco?: boolean;
    vfxType?: VfxType | null;
    windowType?: WindowType | null;
    windowColor?: WindowColor | null;
    paneType?: PaneType | null;
    curtainType?: CurtainType | null;
    curtainColor?: null | string;
    ceilingType?: CeilingType;
    uses?: number | null;
    fossilGroup?: string;
    description?: string[];
    museum?: Museum;
    highResTexture?: null;
    genuine?: boolean;
    category?: Category;
    realArtworkTitle?: string;
    artist?: string;
}
export declare enum Catalog {
    ForSale = "For sale",
    NotForSale = "Not for sale"
}
export declare enum Category {
    Accessories = "Accessories",
    Art = "Art",
    Bags = "Bags",
    Bottoms = "Bottoms",
    ClothingOther = "Clothing Other",
    DressUp = "Dress-Up",
    Equipment = "Equipment",
    Fencing = "Fencing",
    Floors = "Floors",
    Fossils = "Fossils",
    Headwear = "Headwear",
    Housewares = "Housewares",
    MessageCards = "Message Cards",
    Miscellaneous = "Miscellaneous",
    Music = "Music",
    Other = "Other",
    Photos = "Photos",
    Posters = "Posters",
    Rugs = "Rugs",
    Shoes = "Shoes",
    Socks = "Socks",
    Tools = "Tools",
    Tops = "Tops",
    Umbrellas = "Umbrellas",
    WallMounted = "Wall-mounted",
    Wallpaper = "Wallpaper"
}
export declare enum CeilingType {
    Cloth = "Cloth",
    Gold = "Gold",
    Plain = "Plain",
    Stone = "Stone",
    Tile = "Tile",
    Wood = "Wood"
}
export declare enum Color {
    Aqua = "Aqua",
    Beige = "Beige",
    Black = "Black",
    Blue = "Blue",
    Brown = "Brown",
    Colorful = "Colorful",
    Gray = "Gray",
    Green = "Green",
    Orange = "Orange",
    Pink = "Pink",
    Purple = "Purple",
    Red = "Red",
    White = "White",
    Yellow = "Yellow"
}
export declare enum Concept {
    Bathroom = "bathroom",
    ChildSRoom = "child's room",
    Concert = "concert",
    Den = "den",
    Expensive = "expensive",
    Facility = "facility",
    Fancy = "fancy",
    Fitness = "fitness",
    FreezingCold = "freezing cold",
    Garden = "garden",
    Harmonious = "harmonious",
    Heritage = "heritage",
    Horror = "horror",
    Kitchen = "kitchen",
    LivingRoom = "living room",
    Music = "music",
    None = "none",
    Ocean = "ocean",
    Office = "office",
    Outdoors = "outdoors",
    Party = "party",
    School = "school",
    Shop = "shop",
    Space = "space",
    Workshop = "workshop"
}
export declare enum CurtainType {
    Curtains = "Curtains",
    RollerShades = "Roller Shades",
    SlattedBlinds = "Slatted Blinds"
}
export declare enum ExchangeCurrency {
    HeartCrystals = "Heart Crystals",
    NookMiles = "Nook Miles"
}
export declare enum Gender {
    Free = "Free",
    Manly = "Manly",
    Womanly = "Womanly"
}
export declare enum HhaCategory {
    AC = "AC",
    Appliance = "Appliance",
    Audio = "Audio",
    Clock = "Clock",
    Doll = "Doll",
    Dresser = "Dresser",
    Lighting = "Lighting",
    MusicalInstrument = "MusicalInstrument",
    Pet = "Pet",
    Plant = "Plant",
    SmallGoods = "SmallGoods",
    Trash = "Trash",
    Tv = "TV"
}
export declare enum InteractEnum {
    Chair = "Chair",
    Trash = "Trash",
    Wardrobe = "Wardrobe",
    Workbench = "Workbench"
}
export declare enum LightingType {
    Candle = "Candle",
    Emission = "Emission",
    Fluorescent = "Fluorescent",
    Monitor = "Monitor",
    Spotlight = "Spotlight"
}
export declare enum SeasonalAvailability {
    AllYear = "All Year",
    Autumn = "Autumn",
    Fall = "Fall",
    Spring = "Spring",
    Summer = "Summer",
    Winter = "Winter"
}
export declare enum Museum {
    Room1 = "Room 1",
    Room2 = "Room 2",
    Room3 = "Room 3"
}
export declare enum PaneType {
    Glass = "Glass",
    Screen = "Screen"
}
export declare enum PrimaryShape {
    ALine = "A-line",
    ALong = "A-long",
    BLong = "B-long",
    Balloon = "Balloon",
    Box = "Box",
    Dress = "Dress",
    Kimono = "Kimono",
    Marinesuit = "Marinesuit",
    Overall = "Overall",
    Rib = "Rib",
    Robe = "Robe",
    Salopette = "Salopette"
}
export interface Recipe {
    sourceSheet: RecipeSourceSheet;
    name: string;
    image: string;
    imageSh: null | string;
    buy: number;
    sell: number | null;
    exchangePrice: number | null;
    exchangeCurrency: ExchangeCurrency | null;
    source: string[];
    sourceNotes: string[] | null;
    seasonEvent: null | string;
    seasonEventExclusive: boolean | null;
    versionAdded: Version;
    unlocked: boolean;
    recipesToUnlock: number;
    category: Category;
    craftedItemInternalId: number;
    cardColor: CardColor | null;
    diyIconFilename: string;
    diyIconFilenameSh: null | string;
    serialId: number;
    internalId: number;
    uniqueEntryId: string;
    materials: {
        [key: string]: number;
    };
    materialsTranslations: {
        [key: string]: SeriesTranslations | null;
    };
}
export declare enum CardColor {
    Beige = "beige",
    Blue = "blue",
    Brick = "brick",
    Brown = "brown",
    Cream = "cream",
    DarkGray = "dark gray",
    Gold = "gold",
    Green = "green",
    LightGray = "light gray",
    Orange = "orange",
    Pink = "pink",
    Purple = "purple",
    Red = "red",
    Silver = "silver",
    White = "white",
    Yellow = "yellow"
}
export interface SeriesTranslations {
    sourceSheet: SeriesTranslationsSourceSheet;
    id: number;
    version?: Version;
    english: string;
    englishEurope: string;
    german: string;
    spanish: string;
    spanishUs: string;
    french: string;
    frenchUs: string;
    italian: string;
    dutch: string;
    chinese: string;
    chineseTraditional: string;
    japanese: string;
    korean: string;
    russian: string;
    plural: boolean;
    variantId?: number;
    furnitureName?: string;
}
export declare enum SeriesTranslationsSourceSheet {
    Accessories = "Accessories",
    Art = "Art",
    Bags = "Bags",
    Bottoms = "Bottoms",
    BugsModels = "Bugs Models",
    Caps = "Caps",
    Craft = "Craft",
    Doorplates = "Doorplates",
    Dresses = "Dresses",
    Etc = "ETC",
    EventItems = "Event Items",
    Fence = "Fence",
    FishModels = "Fish Models",
    Floors = "Floors",
    Fossils = "Fossils",
    Furniture = "Furniture",
    FurniturePatterns = "Furniture Patterns",
    FurnitureVariants = "Furniture Variants",
    HHAThemes = "HHA Themes",
    KKAlbums = "K.K. Albums",
    MarineSuit = "Marine Suit",
    Masks = "Masks",
    Pictures = "Pictures",
    Plants = "Plants",
    Posters = "Posters",
    Rugs = "Rugs",
    Shells = "Shells",
    Shoes = "Shoes",
    Socks = "Socks",
    Tools = "Tools",
    Tops = "Tops",
    Umbrella = "Umbrella",
    Walls = "Walls"
}
export declare enum Version {
    The100 = "1.0.0",
    The110 = "1.1.0",
    The120 = "1.2.0",
    The130 = "1.3.0",
    The140 = "1.4.0",
    The150 = "1.5.0",
    The160 = "1.6.0",
    The170 = "1.7.0",
    The180 = "1.8.0",
    The190 = "1.9.0"
}
export declare enum RecipeSourceSheet {
    Recipes = "Recipes"
}
export declare enum SecondaryShape {
    H = "H",
    L = "L",
    N = "N"
}
export declare enum Size {
    The05X1 = "0.5x1",
    The15X15 = "1.5x1.5",
    The1X05 = "1x0.5",
    The1X1 = "1x1",
    The1X15 = "1x1.5",
    The1X2 = "1x2",
    The2X05 = "2x0.5",
    The2X1 = "2x1",
    The2X15 = "2x1.5",
    The2X2 = "2x2",
    The3X1 = "3x1",
    The3X2 = "3x2",
    The3X3 = "3x3",
    The4X3 = "4x3",
    The4X4 = "4x4",
    The5X5 = "5x5"
}
export declare enum SizeCategory {
    Large = "Large",
    Medium = "Medium",
    Small = "Small"
}
export declare enum SpeakerType {
    Cheap = "Cheap",
    HiFi = "Hi-fi",
    Phono = "Phono",
    Retro = "Retro"
}
export declare enum Style {
    Active = "Active",
    Cool = "Cool",
    Cute = "Cute",
    Elegant = "Elegant",
    Gorgeous = "Gorgeous",
    Simple = "Simple"
}
export declare enum Theme {
    Comfy = "comfy",
    Everyday = "everyday",
    FairyTale = "fairy tale",
    Formal = "formal",
    Goth = "goth",
    Outdoorsy = "outdoorsy",
    Party = "party",
    Sporty = "sporty",
    Theatrical = "theatrical",
    Vacation = "vacation",
    Work = "work"
}
export interface ThemesTranslations {
    party?: Comfy;
    everyday?: Comfy;
    comfy?: Comfy;
    outdoorsy?: Comfy;
    vacation?: Comfy;
    "fairy tale"?: Comfy;
    theatrical?: Comfy;
    formal?: Comfy;
    work?: Comfy;
    sporty?: Comfy;
    goth?: Comfy;
}
export interface Comfy {
    sourceSheet: ComfySourceSheet;
    id: ID;
    version: Version;
    english: Theme;
    englishEurope: Theme;
    german: German;
    spanish: Spanish;
    spanishUs: Spanish;
    french: French;
    frenchUs: French;
    italian: Italian;
    dutch: DutchEnum;
    chinese: Chinese;
    chineseTraditional: ChineseTraditional;
    japanese: Japanese;
    korean: Korean;
    russian: Russian;
    plural: boolean;
}
export declare enum Chinese {
    休闲 = "\u4F11\u95F2",
    工作 = "\u5DE5\u4F5C",
    度假 = "\u5EA6\u5047",
    恐怖 = "\u6050\u6016",
    户外 = "\u6237\u5916",
    日常 = "\u65E5\u5E38",
    正式 = "\u6B63\u5F0F",
    派对 = "\u6D3E\u5BF9",
    童话世界 = "\u7AE5\u8BDD\u4E16\u754C",
    舞台 = "\u821E\u53F0",
    运动 = "\u8FD0\u52A8"
}
export declare enum ChineseTraditional {
    工作 = "\u5DE5\u4F5C",
    度假 = "\u5EA6\u5047",
    恐怖 = "\u6050\u6016",
    悠閒 = "\u60A0\u9592",
    戶外活動 = "\u6236\u5916\u6D3B\u52D5",
    日常生活 = "\u65E5\u5E38\u751F\u6D3B",
    正式 = "\u6B63\u5F0F",
    派對 = "\u6D3E\u5C0D",
    童話世界 = "\u7AE5\u8A71\u4E16\u754C",
    舞台 = "\u821E\u53F0",
    運動 = "\u904B\u52D5"
}
export declare enum DutchEnum {
    AlledaagsThema = "alledaags thema",
    Feestthema = "feestthema",
    FormeThema = "forme thema",
    Griezelthema = "griezelthema",
    Podiumthema = "podiumthema",
    Sportthema = "sportthema",
    Sprookjesthema = "sprookjesthema",
    Vakantiethema = "vakantiethema",
    Vrijetijdsthema = "vrijetijdsthema",
    WeersbestendigThema = "weersbestendig thema",
    Werkthema = "werkthema"
}
export declare enum French {
    TenueDExtérieur = "tenue d'ext\u00E9rieur",
    TenueDeDétente = "tenue de d\u00E9tente",
    TenueDeFête = "tenue de f\u00EAte",
    TenueDeScène = "tenue de sc\u00E8ne",
    TenueDeTousLesJours = "tenue de tous les jours",
    TenueDeVacances = "tenue de vacances",
    TenueEffrayante = "tenue effrayante",
    TenueFéerique = "tenue f\u00E9erique",
    TenueFéérique = "tenue f\u00E9\u00E9rique",
    TenueOfficielle = "tenue officielle",
    TenueProfessionnelle = "tenue professionnelle",
    TenueSport = "tenue sport"
}
export declare enum German {
    Alltagskleidung = "Alltagskleidung",
    Arbeitskleidung = "Arbeitskleidung",
    Bühnenkleidung = "B\u00FChnenkleidung",
    Formellkleidung = "Formellkleidung",
    Freizeitkleidung = "Freizeitkleidung",
    Horrorkleidung = "Horrorkleidung",
    Märchenkleidung = "M\u00E4rchenkleidung",
    Outdoorkleidung = "Outdoorkleidung",
    Partykleidung = "Partykleidung",
    Sportkleidung = "Sportkleidung",
    Urlaubskleidung = "Urlaubskleidung"
}
export declare enum ID {
    Daily = "Daily",
    Fairyland = "Fairyland",
    Fomal = "Fomal",
    Horror = "Horror",
    Outdoor = "Outdoor",
    Party = "Party",
    Relax = "Relax",
    Sport = "Sport",
    Stage = "Stage",
    Vacation = "Vacation",
    Work = "Work"
}
export declare enum Italian {
    Confortevole = "confortevole",
    DaAriaAperta = "da aria aperta",
    DaFesta = "da festa",
    DaFiaba = "da fiaba",
    DaLavoro = "da lavoro",
    DaSport = "da sport",
    DaTeatro = "da teatro",
    DaVacanza = "da vacanza",
    Formale = "formale",
    Horror = "horror",
    PerTuttiIGiorni = "per tutti i giorni"
}
export declare enum Japanese {
    おしごと仕事 = "\u304A\u3057\u3054\u3068\u4ED5\u4E8B",
    アウトドア = "\u30A2\u30A6\u30C8\u30C9\u30A2",
    ステージ = "\u30B9\u30C6\u30FC\u30B8",
    スポーツ = "\u30B9\u30DD\u30FC\u30C4",
    デイリー = "\u30C7\u30A4\u30EA\u30FC",
    バカンス = "\u30D0\u30AB\u30F3\u30B9",
    パーティー = "\u30D1\u30FC\u30C6\u30A3\u30FC",
    フォーマル = "\u30D5\u30A9\u30FC\u30DE\u30EB",
    ホラー = "\u30DB\u30E9\u30FC",
    メルヘン = "\u30E1\u30EB\u30D8\u30F3",
    リラックス = "\u30EA\u30E9\u30C3\u30AF\u30B9"
}
export declare enum Korean {
    데일리 = "\uB370\uC77C\uB9AC",
    릴랙스 = "\uB9B4\uB799\uC2A4",
    메르헨 = "\uBA54\uB974\uD5E8",
    바캉스 = "\uBC14\uCE89\uC2A4",
    비즈니스 = "\uBE44\uC988\uB2C8\uC2A4",
    스테이지 = "\uC2A4\uD14C\uC774\uC9C0",
    스포츠 = "\uC2A4\uD3EC\uCE20",
    아웃도어 = "\uC544\uC6C3\uB3C4\uC5B4",
    파티 = "\uD30C\uD2F0",
    포멀 = "\uD3EC\uBA40",
    호러 = "\uD638\uB7EC"
}
export declare enum Russian {
    Готический = "\u0433\u043E\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0439",
    Отпускной = "\u043E\u0442\u043F\u0443\u0441\u043A\u043D\u043E\u0439",
    Повседневный = "\u043F\u043E\u0432\u0441\u0435\u0434\u043D\u0435\u0432\u043D\u044B\u0439",
    Походный = "\u043F\u043E\u0445\u043E\u0434\u043D\u044B\u0439",
    Праздничный = "\u043F\u0440\u0430\u0437\u0434\u043D\u0438\u0447\u043D\u044B\u0439",
    Рабочий = "\u0440\u0430\u0431\u043E\u0447\u0438\u0439",
    Спортивный = "\u0441\u043F\u043E\u0440\u0442\u0438\u0432\u043D\u044B\u0439",
    Удобный = "\u0443\u0434\u043E\u0431\u043D\u044B\u0439",
    Фантазийный = "\u0444\u0430\u043D\u0442\u0430\u0437\u0438\u0439\u043D\u044B\u0439",
    Формальный = "\u0444\u043E\u0440\u043C\u0430\u043B\u044C\u043D\u044B\u0439",
    Эффектный = "\u044D\u0444\u0444\u0435\u043A\u0442\u043D\u044B\u0439"
}
export declare enum ComfySourceSheet {
    FashionThemes = "Fashion Themes"
}
export declare enum Spanish {
    Casual = "casual",
    DeActividadesAlAireLibre = "de actividades al aire libre",
    DeFantasía = "de fantas\u00EDa",
    DeFiesta = "de fiesta",
    Deportivo = "deportivo",
    Desenfadado = "desenfadado",
    Formal = "formal",
    Gótico = "g\u00F3tico",
    Profesional = "profesional",
    Teatral = "teatral",
    Todoterreno = "todoterreno",
    Vacacional = "vacacional"
}
export declare enum VariantID {
    The0_0 = "0_0",
    The0_1 = "0_1",
    The0_2 = "0_2",
    The0_3 = "0_3",
    The0_4 = "0_4",
    The0_5 = "0_5",
    The0_6 = "0_6",
    The0_7 = "0_7",
    The1_0 = "1_0",
    The1_1 = "1_1",
    The1_2 = "1_2",
    The1_3 = "1_3",
    The1_4 = "1_4",
    The1_5 = "1_5",
    The1_6 = "1_6",
    The1_7 = "1_7",
    The2_0 = "2_0",
    The2_1 = "2_1",
    The2_2 = "2_2",
    The2_3 = "2_3",
    The2_4 = "2_4",
    The2_5 = "2_5",
    The2_6 = "2_6",
    The2_7 = "2_7",
    The3_0 = "3_0",
    The3_1 = "3_1",
    The3_2 = "3_2",
    The3_3 = "3_3",
    The3_4 = "3_4",
    The3_5 = "3_5",
    The3_6 = "3_6",
    The3_7 = "3_7",
    The4_0 = "4_0",
    The4_1 = "4_1",
    The4_2 = "4_2",
    The4_3 = "4_3",
    The4_4 = "4_4",
    The4_5 = "4_5",
    The4_6 = "4_6",
    The4_7 = "4_7",
    The5_0 = "5_0",
    The5_1 = "5_1",
    The5_2 = "5_2",
    The5_3 = "5_3",
    The5_4 = "5_4",
    The5_5 = "5_5",
    The5_6 = "5_6",
    The5_7 = "5_7",
    The6_0 = "6_0",
    The6_1 = "6_1",
    The6_2 = "6_2",
    The6_3 = "6_3",
    The6_4 = "6_4",
    The6_5 = "6_5",
    The6_6 = "6_6",
    The6_7 = "6_7",
    The7_0 = "7_0",
    The7_1 = "7_1",
    The7_2 = "7_2",
    The7_3 = "7_3",
    The7_4 = "7_4",
    The7_5 = "7_5",
    The7_6 = "7_6",
    The7_7 = "7_7"
}
export interface VariationElement {
    closetImage?: string;
    storageImage?: string;
    variation: number | null | string;
    exchangePrice?: number | null;
    exchangeCurrency?: ExchangeCurrency | null;
    seasonEvent: null | string;
    seasonEventExclusive: boolean | null;
    seasonality?: SeasonalAvailability;
    mannequinSeason?: SeasonalAvailability | null;
    gender?: Gender;
    villagerGender?: Gender | null;
    sortOrder?: number;
    filename: string;
    clothGroupId?: number;
    internalId: number;
    uniqueEntryId: string;
    variantTranslations?: VariantTranslations | null;
    colors: Color[];
    image?: string;
    pattern?: null | string;
    patternTitle?: null | string;
    variantId?: VariantID;
    kitType?: KitType | null;
    surface?: boolean;
    hhaCategory?: HhaCategory | null;
    concepts?: Concept[];
    patternTranslations?: SeriesTranslations | null;
    doorDeco?: boolean;
    uses?: number;
    stackSize?: number;
}
export declare enum KitType {
    Normal = "Normal",
    Pumpkin = "Pumpkin",
    RainbowFeather = "Rainbow feather"
}
export interface VariantTranslations {
    sourceSheet?: VariantTranslationsSourceSheet;
    variantId?: number;
    id?: number;
    clothName?: string;
    english: number | string;
    englishEurope: number | string;
    german: number | string;
    spanish: number | string;
    spanishUs: number | string;
    french: number | string;
    frenchUs: number | string;
    italian: number | string;
    dutch: number | string;
    chinese: string;
    chineseTraditional: string;
    japanese: string;
    korean: string;
    russian: number | string;
    plural?: boolean;
    clothGroup?: number;
    furnitureName?: string;
}
export declare enum VariantTranslationsSourceSheet {
    AccessoriesVariants = "Accessories Variants",
    BagsVariants = "Bags Variants",
    BottomsVariants = "Bottoms Variants",
    CapsVariants = "Caps Variants",
    DressesVariants = "Dresses Variants",
    FurnitureVariants = "Furniture Variants",
    MarineSuitVariants = "Marine Suit Variants",
    MasksVariants = "Masks Variants",
    ShoesVariants = "Shoes Variants",
    SocksVariants = "Socks Variants",
    TopsVariants = "Tops Variants"
}
export declare enum VfxType {
    LightOff = "LightOff",
    Random = "Random",
    Synchro = "Synchro"
}
export declare enum WindowColor {
    BlackMetal = "Black Metal",
    DarkWood = "Dark Wood",
    GreyMetal = "Grey Metal",
    GreyWood = "Grey Wood",
    LightWood = "Light Wood",
    NaturalWood = "Natural Wood",
    WhiteMetal = "White Metal",
    WhiteWood = "White Wood",
    Wood = "Wood"
}
export declare enum WindowType {
    Arch = "Arch",
    Circle = "Circle",
    FourPane = "Four Pane",
    SinglePane = "Single Pane",
    SlidingPane = "Sliding Pane"
}
